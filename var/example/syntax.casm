//
//  Copyright (c) 2014-2016 CASM Organization https://github.com/casm-lang
//  All rights reserved.
//
//  Developed by: Philipp Paulweber
//                Emmanuel Pescosta
//                Florian Hahn
//                https://github.com/casm-lang/casmc
//
//  This file is part of casmc.
//
//  casmc is free software: you can redistribute it and/or modify
//  it under the terms of the GNU General Public License as published by
//  the Free Software Foundation, either version 3 of the License, or
//  (at your option) any later version.
//
//  casmc is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
//  GNU General Public License for more details.
//
//  You should have received a copy of the GNU General Public License
//  along with casmc. If not, see <http://www.gnu.org/licenses/>.
//

CASM syntax
init syntax

function x : -> Integer
function y : Integer -> Integer
function z : Integer -> Boolean

derived macro = 10 + 50

rule syntax =
{
    x := 1
        
    y( 0 ) := 7 + 5
    y( 1 ) := 7 - 5
    y( 2 ) := 7 * 5
    y( 3 ) := 7 / 5
    y( 4 ) := 7 % 5
 // y( 5 ) := 7 div 5

    z( 0 ) := 7 =  5
    z( 1 ) := 7 != 5
    z( 2 ) := 7 <  5
    z( 3 ) := 7 <= 5
    z( 4 ) := 7 >  5
    z( 5 ) := 7 >= 5
    
    z( 6 ) := z( 7 ) or  z( 5 )
    z( 7 ) := z( 7 ) xor z( 5 )
    z( 8 ) := z( 7 ) and z( 5 )
    z( 9 ) := not z( 5 )

    z( 10 ) := true
    z( 11 ) := false

    let c = x in
    {
        y( c ) := c
    }
    
    print macro
}
